NAME-UDIT KHANDELWAL					COMPETITIVE PROG QUESTION 2



Product of Array Except Self

Problem Statement
Given an integer array nums , return an array answer such that answer[i] is equal to the
product of all the elements of nums except nums[i] .
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division
operation


example 1-

Input: nums = [1,2,3,4]
Output: [24,12,8,6]

example 2-

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]

solution:-

#include<iostream>
using namespace std;

int main()
{
    int size,i=0;
    cout<<"Enter size of array: ";
    cin>>size;
    int arr[size];
    int answer[size]={0};
    cout<<"Enter elements of array: ";
    for(int i=0;i<size;i++)
    {
        cin>>arr[i];
    }
    cout<<"answer array is: ";
    int m=1,z=0;
    for(i=0;i<size;i++)
    {
        if(arr[i]==0)
            z+=1;
    }
    for(i=0;i<size;i++)
    {
        if(arr[i]==0)
            continue;
        m*=arr[i];
    }
    if(z>1)
    {
        for(i=0;i<size;i++)
            cout<<answer[i]<<"\t";
        return 0;
    }
    else if(z==1)
    {
        for(i=0;i<size;i++)
        {
            if(arr[i]==0)
                answer[i]=m;
        }
        for(i=0;i<size;i++)
            cout<<answer[i]<<"\t";
    }
    else
    {
        answer[0]=1;
        for(i=1;i<size;i++)
        {
            answer[i]=answer[i-1]*arr[i-1];
        }
        int temp=1;
        for(i=size-1;i>=0;i--)
        {
            answer[i]*=temp;
            temp*=arr[i];
        }
        for(i=0;i<size;i++)
            cout<<answer[i]<<"\t";
    }
    return 0;
}


